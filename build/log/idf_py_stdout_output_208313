[1/9] Performing build step for 'bootloader'
[1/1] cd /home/dungnt98/esp32-conveyor/build/bootloader/esp-idf/esptool_py && /home/dungnt98/.espressif/python_env/idf5.0_py3.8_env/bin/python /home/dungnt98/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/dungnt98/esp32-conveyor/build/bootloader/bootloader.bin
Bootloader binary size 0x6700 bytes. 0x900 bytes (8%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/tcp_client.c.obj
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable esp32-conveyor.elf
[6/7] Generating binary image from built executable
esptool.py v4.5
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated /home/dungnt98/esp32-conveyor/build/esp32-conveyor.bin
[7/7] cd /home/dungnt98/esp32-conveyor/build/esp-idf/esptool_py && /home/dungnt98/.espressif/python_env/idf5.0_py3.8_env/bin/python /home/dungnt98/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/dungnt98/esp32-conveyor/build/partition_table/partition-table.bin /home/dungnt98/esp32-conveyor/build/esp32-conveyor.bin
esp32-conveyor.bin binary size 0xb0630 bytes. Smallest app partition is 0x100000 bytes. 0x4f9d0 bytes (31%) free.
